"""Initial tables

Revision ID: 07751582ada2
Revises: 
Create Date: 2025-10-01 04:29:34.754302

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '07751582ada2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('places',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('lng', sa.Float(), nullable=True),
    sa.Column('google_place_id', sa.String(length=255), nullable=True),
    sa.Column('yelp_business_id', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('website', sa.String(length=500), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('review_count', sa.Integer(), nullable=True),
    sa.Column('price_level', sa.Integer(), nullable=True),
    sa.Column('cuisine_tags', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('reviews_last_fetched', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cache_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_places_city'), 'places', ['city'], unique=False)
    op.create_index(op.f('ix_places_google_place_id'), 'places', ['google_place_id'], unique=True)
    op.create_index(op.f('ix_places_name'), 'places', ['name'], unique=False)
    op.create_index(op.f('ix_places_yelp_business_id'), 'places', ['yelp_business_id'], unique=True)
    op.create_table('combo_templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('place_id', sa.UUID(), nullable=False),
    sa.Column('party_size_min', sa.Integer(), nullable=False),
    sa.Column('party_size_max', sa.Integer(), nullable=False),
    sa.Column('budget_min', sa.Float(), nullable=True),
    sa.Column('budget_max', sa.Float(), nullable=True),
    sa.Column('menu_item_ids', sa.Text(), nullable=False),
    sa.Column('item_names', sa.Text(), nullable=False),
    sa.Column('combo_score', sa.Float(), nullable=False),
    sa.Column('rationale', sa.Text(), nullable=True),
    sa.Column('balance_matrix', sa.JSON(), nullable=True),
    sa.Column('dietary_tags', sa.Text(), nullable=True),
    sa.Column('allergen_warnings', sa.Text(), nullable=True),
    sa.Column('spice_level_max', sa.Integer(), nullable=True),
    sa.Column('suggestion_count', sa.Integer(), nullable=True),
    sa.Column('acceptance_count', sa.Integer(), nullable=True),
    sa.Column('last_suggested', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('constraints_hash', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_combo_templates_constraints_hash'), 'combo_templates', ['constraints_hash'], unique=False)
    op.create_index(op.f('ix_combo_templates_place_id'), 'combo_templates', ['place_id'], unique=False)
    op.create_table('menu_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('place_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('normalized_name', sa.String(length=255), nullable=True),
    sa.Column('aliases', sa.JSON(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('section', sa.String(length=100), nullable=True),
    sa.Column('menu_position', sa.Integer(), nullable=True),
    sa.Column('price_text', sa.String(length=50), nullable=True),
    sa.Column('price_amount', sa.Float(), nullable=True),
    sa.Column('price_currency', sa.String(length=3), nullable=True),
    sa.Column('bbox', sa.JSON(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('review_mentions', sa.Integer(), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_menu_items_name'), 'menu_items', ['name'], unique=False)
    op.create_index(op.f('ix_menu_items_normalized_name'), 'menu_items', ['normalized_name'], unique=False)
    op.create_index(op.f('ix_menu_items_place_id'), 'menu_items', ['place_id'], unique=False)
    op.create_table('reviews',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('place_id', sa.UUID(), nullable=False),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('author_name', sa.String(length=255), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('review_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_processed', sa.String(length=20), nullable=True),
    sa.Column('sentence_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_review_place_rating', 'reviews', ['place_id', 'rating'], unique=False)
    op.create_index('idx_review_source_external_id', 'reviews', ['source', 'external_id'], unique=False)
    op.create_index(op.f('ix_reviews_external_id'), 'reviews', ['external_id'], unique=False)
    op.create_index(op.f('ix_reviews_place_id'), 'reviews', ['place_id'], unique=False)
    op.create_table('review_embeds',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('review_id', sa.UUID(), nullable=False),
    sa.Column('sentence_index', sa.Integer(), nullable=False),
    sa.Column('text_span', sa.Text(), nullable=False),
    sa.Column('char_start', sa.Integer(), nullable=True),
    sa.Column('char_end', sa.Integer(), nullable=True),
    sa.Column('vector', sa.Text(), nullable=False),
    sa.Column('aspects_json', sa.JSON(), nullable=True),
    sa.Column('model_name', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['review_id'], ['reviews.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_review_embed_review_sentence', 'review_embeds', ['review_id', 'sentence_index'], unique=False)
    op.create_index(op.f('ix_review_embeds_review_id'), 'review_embeds', ['review_id'], unique=False)
    op.create_table('taste_cards',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('menu_item_id', sa.UUID(), nullable=False),
    sa.Column('place_id', sa.UUID(), nullable=False),
    sa.Column('aspects', sa.JSON(), nullable=False),
    sa.Column('bullets', sa.Text(), nullable=False),
    sa.Column('pairing_suggestion', sa.Text(), nullable=True),
    sa.Column('serving_notes', sa.Text(), nullable=True),
    sa.Column('confidence_level', sa.String(length=20), nullable=False),
    sa.Column('fallback_level', sa.String(length=1), nullable=False),
    sa.Column('sources', sa.JSON(), nullable=True),
    sa.Column('review_snippets_used', sa.Integer(), nullable=True),
    sa.Column('model_version', sa.String(length=50), nullable=True),
    sa.Column('generated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['menu_item_id'], ['menu_items.id'], ),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_taste_cards_menu_item_id'), 'taste_cards', ['menu_item_id'], unique=True)
    op.create_index(op.f('ix_taste_cards_place_id'), 'taste_cards', ['place_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_taste_cards_place_id'), table_name='taste_cards')
    op.drop_index(op.f('ix_taste_cards_menu_item_id'), table_name='taste_cards')
    op.drop_table('taste_cards')
    op.drop_index(op.f('ix_review_embeds_review_id'), table_name='review_embeds')
    op.drop_index('idx_review_embed_review_sentence', table_name='review_embeds')
    op.drop_table('review_embeds')
    op.drop_index(op.f('ix_reviews_place_id'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_external_id'), table_name='reviews')
    op.drop_index('idx_review_source_external_id', table_name='reviews')
    op.drop_index('idx_review_place_rating', table_name='reviews')
    op.drop_table('reviews')
    op.drop_index(op.f('ix_menu_items_place_id'), table_name='menu_items')
    op.drop_index(op.f('ix_menu_items_normalized_name'), table_name='menu_items')
    op.drop_index(op.f('ix_menu_items_name'), table_name='menu_items')
    op.drop_table('menu_items')
    op.drop_index(op.f('ix_combo_templates_place_id'), table_name='combo_templates')
    op.drop_index(op.f('ix_combo_templates_constraints_hash'), table_name='combo_templates')
    op.drop_table('combo_templates')
    op.drop_index(op.f('ix_places_yelp_business_id'), table_name='places')
    op.drop_index(op.f('ix_places_name'), table_name='places')
    op.drop_index(op.f('ix_places_google_place_id'), table_name='places')
    op.drop_index(op.f('ix_places_city'), table_name='places')
    op.drop_table('places')
    # ### end Alembic commands ###